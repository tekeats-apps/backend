version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:8.2-fpm
    container_name: app
    restart: unless-stopped
    extra_hosts:
    - 'host.docker.internal:host-gateway'
    - "tekeats.local:127.0.0.1"
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: server
    restart: unless-stopped
    tty: true
    ports:
      - '${APP_PORT:-80}:80'
    extra_hosts:
    - 'host.docker.internal:host-gateway'
    - "tekeats.test:127.0.0.1"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: mysql:latest
    container_name: backend_db
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysqldata:
    driver: local